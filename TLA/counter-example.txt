95M distinct states, 388M total, 20 minutes.
Invariant LinearizableReads is violated.
The behavior up to this point is:
1: <Initial predicate>
/\ currentTerm = (n1 :> 0 @@ n2 :> 0 @@ n3 :> 0)
/\ state = (n1 :> Follower @@ n2 :> Follower @@ n3 :> Follower)
/\ log = (n1 :> <<>> @@ n2 :> <<>> @@ n3 :> <<>>)
/\ replicationTimes = (n1 :> <<>> @@ n2 :> <<>> @@ n3 :> <<>>)
/\ committed = {}
/\ commitIndex = (n1 :> 0 @@ n2 :> 0 @@ n3 :> 0)
/\ clock = 0
/\ latestRead = ( k1 :> [term |-> 0, key |-> k1, index |-> 0] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 0
/\ maxMajorityReplicated = (n1 :> 0 @@ n2 :> 0 @@ n3 :> 0)
2: <BecomeLeader(n1,{n1, n2, n3}) line 176, col 5 to line 184, col 85 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Follower)
/\ log = (n1 :> <<>> @@ n2 :> <<>> @@ n3 :> <<>>)
/\ replicationTimes = (n1 :> <<>> @@ n2 :> <<>> @@ n3 :> <<>>)
/\ committed = {}
/\ commitIndex = (n1 :> 0 @@ n2 :> 0 @@ n3 :> 0)
/\ clock = 0
/\ latestRead = ( k1 :> [term |-> 0, key |-> k1, index |-> 0] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 1
/\ maxMajorityReplicated = (n1 :> 0 @@ n2 :> 0 @@ n3 :> 0)
3: <ClientWrite(n1,k1) line 118, col 5 to line 122, col 75 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Follower)
/\ log = (n1 :> <<[term |-> 1, key |-> k1, index |-> 1]>> @@ n2 :> <<>> @@ n3 :> <<>>)
/\ replicationTimes = (n1 :> <<1>> @@ n2 :> <<>> @@ n3 :> <<>>)
/\ committed = {}
/\ commitIndex = (n1 :> 0 @@ n2 :> 0 @@ n3 :> 0)
/\ clock = 1
/\ latestRead = ( k1 :> [term |-> 0, key |-> k1, index |-> 0] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 1
/\ maxMajorityReplicated = (n1 :> 0 @@ n2 :> 0 @@ n3 :> 0)
4: <GetEntries(n2,n1) line 142, col 5 to line 162, col 69 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Follower)
/\ log = ( n1 :> <<[term |-> 1, key |-> k1, index |-> 1]>> @@
  n2 :> <<[term |-> 1, key |-> k1, index |-> 1]>> @@
  n3 :> <<>> )
/\ replicationTimes = (n1 :> <<1>> @@ n2 :> <<1>> @@ n3 :> <<>>)
/\ committed = {}
/\ commitIndex = (n1 :> 0 @@ n2 :> 0 @@ n3 :> 0)
/\ clock = 1
/\ latestRead = ( k1 :> [term |-> 0, key |-> k1, index |-> 0] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 1
/\ maxMajorityReplicated = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 0)
5: <CommitEntry(n1,{n1, n2}) line 188, col 5 to line 206, col 73 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Follower)
/\ log = ( n1 :> <<[term |-> 1, key |-> k1, index |-> 1]>> @@
  n2 :> <<[term |-> 1, key |-> k1, index |-> 1]>> @@
  n3 :> <<>> )
/\ replicationTimes = (n1 :> <<1>> @@ n2 :> <<1>> @@ n3 :> <<>>)
/\ committed = {[term |-> 1, key |-> k1, index |-> 1]}
/\ commitIndex = (n1 :> 1 @@ n2 :> 0 @@ n3 :> 0)
/\ clock = 1
/\ latestRead = ( k1 :> [term |-> 1, key |-> k1, index |-> 1] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 1
/\ maxMajorityReplicated = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 0)
6: <GetEntries(n3,n1) line 142, col 5 to line 162, col 69 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Follower)
/\ log = ( n1 :> <<[term |-> 1, key |-> k1, index |-> 1]>> @@
  n2 :> <<[term |-> 1, key |-> k1, index |-> 1]>> @@
  n3 :> <<[term |-> 1, key |-> k1, index |-> 1]>> )
/\ replicationTimes = (n1 :> <<1>> @@ n2 :> <<1>> @@ n3 :> <<1>>)
/\ committed = {[term |-> 1, key |-> k1, index |-> 1]}
/\ commitIndex = (n1 :> 1 @@ n2 :> 0 @@ n3 :> 1)
/\ clock = 1
/\ latestRead = ( k1 :> [term |-> 1, key |-> k1, index |-> 1] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 1
/\ maxMajorityReplicated = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
7: <ClientWrite(n1,k1) line 118, col 5 to line 122, col 75 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Follower)
/\ log = ( n1 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 1, key |-> k1, index |-> 2] >> @@
  n2 :> <<[term |-> 1, key |-> k1, index |-> 1]>> @@
  n3 :> <<[term |-> 1, key |-> k1, index |-> 1]>> )
/\ replicationTimes = (n1 :> <<1, 2>> @@ n2 :> <<1>> @@ n3 :> <<1>>)
/\ committed = {[term |-> 1, key |-> k1, index |-> 1]}
/\ commitIndex = (n1 :> 1 @@ n2 :> 0 @@ n3 :> 1)
/\ clock = 2
/\ latestRead = ( k1 :> [term |-> 1, key |-> k1, index |-> 1] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 1
/\ maxMajorityReplicated = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
8: <ClientWrite(n1,k1) line 118, col 5 to line 122, col 75 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Follower)
/\ log = ( n1 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 1, key |-> k1, index |-> 2],
         [term |-> 1, key |-> k1, index |-> 3] >> @@
  n2 :> <<[term |-> 1, key |-> k1, index |-> 1]>> @@
  n3 :> <<[term |-> 1, key |-> k1, index |-> 1]>> )
/\ replicationTimes = (n1 :> <<1, 2, 3>> @@ n2 :> <<1>> @@ n3 :> <<1>>)
/\ committed = {[term |-> 1, key |-> k1, index |-> 1]}
/\ commitIndex = (n1 :> 1 @@ n2 :> 0 @@ n3 :> 1)
/\ clock = 3
/\ latestRead = ( k1 :> [term |-> 1, key |-> k1, index |-> 1] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 1
/\ maxMajorityReplicated = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
9: <ClientWrite(n1,k1) line 118, col 5 to line 122, col 75 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Follower)
/\ log = ( n1 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 1, key |-> k1, index |-> 2],
         [term |-> 1, key |-> k1, index |-> 3],
         [term |-> 1, key |-> k1, index |-> 4] >> @@
  n2 :> <<[term |-> 1, key |-> k1, index |-> 1]>> @@
  n3 :> <<[term |-> 1, key |-> k1, index |-> 1]>> )
/\ replicationTimes = (n1 :> <<1, 2, 3, 4>> @@ n2 :> <<1>> @@ n3 :> <<1>>)
/\ committed = {[term |-> 1, key |-> k1, index |-> 1]}
/\ commitIndex = (n1 :> 1 @@ n2 :> 0 @@ n3 :> 1)
/\ clock = 4
/\ latestRead = ( k1 :> [term |-> 1, key |-> k1, index |-> 1] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 1
/\ maxMajorityReplicated = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
10: <BecomeLeader(n3,{n2, n3}) line 176, col 5 to line 184, col 85 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 2 @@ n3 :> 2)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Leader)
/\ log = ( n1 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 1, key |-> k1, index |-> 2],
         [term |-> 1, key |-> k1, index |-> 3],
         [term |-> 1, key |-> k1, index |-> 4] >> @@
  n2 :> <<[term |-> 1, key |-> k1, index |-> 1]>> @@
  n3 :> <<[term |-> 1, key |-> k1, index |-> 1]>> )
/\ replicationTimes = (n1 :> <<1, 2, 3, 4>> @@ n2 :> <<1>> @@ n3 :> <<1>>)
/\ committed = {[term |-> 1, key |-> k1, index |-> 1]}
/\ commitIndex = (n1 :> 1 @@ n2 :> 0 @@ n3 :> 1)
/\ clock = 4
/\ latestRead = ( k1 :> [term |-> 1, key |-> k1, index |-> 1] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 2
/\ maxMajorityReplicated = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
11: <ClientWrite(n3,k1) line 118, col 5 to line 122, col 75 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 2 @@ n3 :> 2)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Leader)
/\ log = ( n1 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 1, key |-> k1, index |-> 2],
         [term |-> 1, key |-> k1, index |-> 3],
         [term |-> 1, key |-> k1, index |-> 4] >> @@
  n2 :> <<[term |-> 1, key |-> k1, index |-> 1]>> @@
  n3 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 2, key |-> k1, index |-> 2] >> )
/\ replicationTimes = (n1 :> <<1, 2, 3, 4>> @@ n2 :> <<1>> @@ n3 :> <<1, 5>>)
/\ committed = {[term |-> 1, key |-> k1, index |-> 1]}
/\ commitIndex = (n1 :> 1 @@ n2 :> 0 @@ n3 :> 1)
/\ clock = 5
/\ latestRead = ( k1 :> [term |-> 1, key |-> k1, index |-> 1] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 2
/\ maxMajorityReplicated = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
12: <GetEntries(n2,n3) line 142, col 5 to line 162, col 69 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 2 @@ n3 :> 2)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Leader)
/\ log = ( n1 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 1, key |-> k1, index |-> 2],
         [term |-> 1, key |-> k1, index |-> 3],
         [term |-> 1, key |-> k1, index |-> 4] >> @@
  n2 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 2, key |-> k1, index |-> 2] >> @@
  n3 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 2, key |-> k1, index |-> 2] >> )
/\ replicationTimes = (n1 :> <<1, 2, 3, 4>> @@ n2 :> <<1, 5>> @@ n3 :> <<1, 5>>)
/\ committed = {[term |-> 1, key |-> k1, index |-> 1]}
/\ commitIndex = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 1)
/\ clock = 5
/\ latestRead = ( k1 :> [term |-> 1, key |-> k1, index |-> 1] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 2
/\ maxMajorityReplicated = (n1 :> 1 @@ n2 :> 2 @@ n3 :> 2)
13: <CommitEntry(n3,{n2, n3}) line 188, col 5 to line 206, col 73 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 2 @@ n3 :> 2)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Leader)
/\ log = ( n1 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 1, key |-> k1, index |-> 2],
         [term |-> 1, key |-> k1, index |-> 3],
         [term |-> 1, key |-> k1, index |-> 4] >> @@
  n2 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 2, key |-> k1, index |-> 2] >> @@
  n3 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 2, key |-> k1, index |-> 2] >> )
/\ replicationTimes = (n1 :> <<1, 2, 3, 4>> @@ n2 :> <<1, 5>> @@ n3 :> <<1, 5>>)
/\ committed = {[term |-> 1, key |-> k1, index |-> 1], [term |-> 2, key |-> k1, index |-> 2]}
/\ commitIndex = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 2)
/\ clock = 5
/\ latestRead = ( k1 :> [term |-> 2, key |-> k1, index |-> 2] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 2
/\ maxMajorityReplicated = (n1 :> 1 @@ n2 :> 2 @@ n3 :> 2)
14: <ClientRead(n1,k1) line 127, col 5 to line 138, col 93 of module leaseRaftLogBased>
/\ currentTerm = (n1 :> 1 @@ n2 :> 2 @@ n3 :> 2)
/\ state = (n1 :> Leader @@ n2 :> Follower @@ n3 :> Leader)
/\ log = ( n1 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 1, key |-> k1, index |-> 2],
         [term |-> 1, key |-> k1, index |-> 3],
         [term |-> 1, key |-> k1, index |-> 4] >> @@
  n2 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 2, key |-> k1, index |-> 2] >> @@
  n3 :>
      << [term |-> 1, key |-> k1, index |-> 1],
         [term |-> 2, key |-> k1, index |-> 2] >> )
/\ replicationTimes = (n1 :> <<1, 2, 3, 4>> @@ n2 :> <<1, 5>> @@ n3 :> <<1, 5>>)
/\ committed = {[term |-> 1, key |-> k1, index |-> 1], [term |-> 2, key |-> k1, index |-> 2]}
/\ commitIndex = (n1 :> 1 @@ n2 :> 1 @@ n3 :> 2)
/\ clock = 5
/\ latestRead = ( k1 :> [term |-> 1, key |-> k1, index |-> 1] @@
  k2 :> [term |-> 0, key |-> k2, index |-> 0] )
/\ maxTerm = 2
/\ maxMajorityReplicated = (n1 :> 1 @@ n2 :> 2 @@ n3 :> 2)
